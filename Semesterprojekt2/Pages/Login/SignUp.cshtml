@page
@model Semesterprojekt2.Pages.Login.SignUpModel
@{
}

<html>
<head>
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "poppins", sans-serif;
        }

        body {
            min-height: 100vh;
            background-image: url('../Images/Login/Overskrift billede.jpg');
            background-size: cover;
            background-position: center;
        }

        .container {
            display: flex;
            justify-content: center;
            align-items: center;
            /* height: 100vh; */
        }

        .wrapper {
            width: 420px;
            background: transparent;
            border: 2px solid rgba(255, 255, 255, .2);
            color: #fff;
            border-radius: 10px;
            padding: 30px 40px;
        }

            .wrapper h1 {
                font-size: 36px;
                text-align: center;
            }

            .wrapper .input-box {
                position: relative;
                width: 100%;
                height: 50px;
                background: salmon;
                margin: 30px 0;

                border: none;
                outline: none;
                border-radius: 40px;

            }

        .input-box input {
            width: 100%;
            height: 100%;
            background: transparent;
            border: none;
            outline: none;
            border: 2px solid rgba(255,255,255,.2);
            border-radius: 40px ;
            font-size: 16px;
            color: #fff;
            padding: 20px 45px 20px 20px;
        }

            .input-box input::placeholder {
                color: #fff;
            }

        .input-box i {
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 20px;
        }

        .wrapper .btn {
            width: 100%;
            height: 45px;
            background: #fff;
            border: none;
            outline: none;
            border-radius: 40px;
            box-shadow: 0 0 10px rgba(0,0,0,.1);
            cursor: pointer;
            font-size: 16px;
            color: #333;
            font-weight: 600;
        }

        .wrapper .register-link {
            font-size: 14.5px;
            text-align: center;
            margin: 20px 0 15px;
        }

        .register-link p a {
            color: #fff;
            text-decoration: none;
            font-weight: 600;
        }

            .register-link p a:hover {
                text-decoration: underline;
            }

        /* .hidden class is used to make labels for input fields non-visible */ 
        .hidden {
            height: 1px;
            left: 0;
            overflow: hidden;
            position: absolute;
            top: -10000px;
            width: 1px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="wrapper">
            <form action="">
                <h1>Sign Up</h1>
                <div class="input-box">
                    <label class="hidden" for="email">Enter Email</label>
                    <input type="email" placeholder="Email" required />
                    <i class='bx bxs-user'></i>
                </div>
                
                <!-- Passwords -->
                <div class="input-box">
                    <label class="hidden" for="password">Enter Password: 6 characters minimum</label>
                    <input type="password" id="password" placeholder="Password" required />
                    <i class='bx bxs-lock-alt'></i>
                </div>

                <div class="input-box">
                    <label class="hidden" for="repeatPassword">Repeat Password: 6 characters minimum</label>
                    <input type="password" id="repeatPassword" placeholder="Repeat Password" required />
                    <i class='bx bxs-lock-alt'></i>
                </div>
                
                <!-- Confirmation Button -->
                <button type="submit" class="btn">Sign Up</button>

                <div class="register-link">
                    <p>Already have an account? <a href="Login">Login</a></p>
                </div>
            </form>
        </div>
    </div>
</body>
</html>


<!-- JavaScript used for validation when form is submitted: 
    Check: Both password fields match
    Check: Minimum eight characters, at least one letter and one number:
-->
<script>
    /* when the initial HTML document has been completely loaded, .addEventListener is called */
    document.addEventListener('DOMContentLoaded', function () {
        /* retrieve references to the input elements with the IDs password and repeatPassword.*/
        const passwordInput = document.getElementById('password');
        const repeatPasswordInput = document.getElementById('repeatPassword');

        /* Function responsible for validating password inputs:
        - Retrieves the current values 
        - Defines a regular expression (passwordRegex) for validating format. 
        - Checks if the password contains at least one letter, one digit, and is at least 8 characters long.
        
        */
        function validatePassword() {
            const password = passwordInput.value;
            const repeatPassword = repeatPasswordInput.value;
            const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{6,}$/;

            /* Custom validation message if passwords dont match or dont fulfil requirements */
            if (!passwordRegex.test(password)) {
                passwordInput.setCustomValidity('Password must contain at least one letter, one number, and be at least 6 characters long');
            } else {
                passwordInput.setCustomValidity('');
                if (password !== repeatPassword) {
                    repeatPasswordInput.setCustomValidity('Passwords do not match');
                } else {
                    repeatPasswordInput.setCustomValidity('');
                }
            }
        }

        /* add event listeners to the password and repeat password inputs for the input event. 
        Ensures that validatePassword function is called whenever there is any input in these fields, 
        allowing real-time validation as the user types. */
        passwordInput.addEventListener('input', validatePassword);
        repeatPasswordInput.addEventListener('input', validatePassword);
    });
</script>



